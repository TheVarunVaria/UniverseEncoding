{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Read Sample and Write","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNm7cwJzFwW8YYkpv7L0B4U"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"EuXUDhubpXjn","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":136},"outputId":"2f5fd1b1-f637-44e6-9256-f490a0923220","executionInfo":{"status":"ok","timestamp":1587005276893,"user_tz":300,"elapsed":2447,"user":{"displayName":"Varun Ketan Varia","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKHlV33ShWTnWMaaY8-As0pcq0f-kvYtpuC3IlwA=s64","userId":"01230964141385336374"}}},"source":["%tensorflow_version 1.6\n","import tensorflow as tf\n","import tensorflow_hub as hub\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import os\n","import pandas as pd\n","import re\n","import seaborn as sns"],"execution_count":1,"outputs":[{"output_type":"stream","text":["`%tensorflow_version` only switches the major version: 1.x or 2.x.\n","You set: `1.6`. This will be interpreted as: `1.x`.\n","\n","\n","TensorFlow 1.x selected.\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n","  import pandas.util.testing as tm\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"9TXbDJ0VpZIJ","colab_type":"code","colab":{}},"source":["#Set the moddule URL\n","module_url = \"https://tfhub.dev/google/universal-sentence-encoder/2\" #@param [\"https://tfhub.dev/google/universal-sentence-encoder/2\", \"https://tfhub.dev/google/universal-sentence-encoder-large/3\"]\n","# set embed variable to set module url\n","embed = hub.Module(module_url)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"sQYothYBpgK1","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":122},"outputId":"38421fc1-6b13-4504-b6ff-de257e2d4783","executionInfo":{"status":"ok","timestamp":1587005101285,"user_tz":300,"elapsed":23202,"user":{"displayName":"Varun Ketan Varia","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKHlV33ShWTnWMaaY8-As0pcq0f-kvYtpuC3IlwA=s64","userId":"01230964141385336374"}}},"source":["#Connect to the Google Drive\n","from google.colab import drive\n","drive.mount('/content/gdrive',force_remount=True)"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"QQ1A-sScpz7k","colab_type":"code","colab":{}},"source":["# Change and set directory to access the unzipped files\n","directory = '/content/gdrive/My Drive/Colab Notebooks/wiki_archived'\n","os.chdir(directory)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"AGupZtOlpbTF","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"outputId":"479710e5-d563-4ee2-f327-068f646eb05b","executionInfo":{"status":"ok","timestamp":1587005307508,"user_tz":300,"elapsed":19227,"user":{"displayName":"Varun Ketan Varia","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKHlV33ShWTnWMaaY8-As0pcq0f-kvYtpuC3IlwA=s64","userId":"01230964141385336374"}}},"source":["#download the model to local so it can be used again and again\n","#os.mkdir('../module_useT')\n","#os.mkdir('../modulke')\n","# Download the module, and uncompress it to the destination folder. \n","!curl -L \"https://tfhub.dev/google/universal-sentence-encoder-large/3?tf-hub-format=compressed\" | tar -zxvC ../module_useT"],"execution_count":4,"outputs":[{"output_type":"stream","text":["  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n","                                 Dload  Upload   Total   Spent    Left  Speed\n","\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n","./\n","./tfhub_module.pb\n","./variables/\n","./variables/variables.data-00000-of-00001\n"," 97  745M   97  724M    0     0  45.7M      0  0:00:16  0:00:15  0:00:01 42.3M./variables/variables.index\n","./assets/\n","./saved_model.pb\n","100  745M  100  745M    0     0  45.6M      0  0:00:16  0:00:16 --:--:-- 40.5M\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-WVPQxgXpvyw","colab_type":"code","colab":{}},"source":["# Compute a representation for each message, showing various lengths supported.\n","word = \"Elephant\"\n","sentence = \"I am a sentence for which I would like to get its embedding.\"\n","paragraph = (\n","    \"Universal Sentence Encoder embeddings also support short paragraphs. \"\n","    \"There is no hard limit on how long the paragraph is. Roughly, the longer \"\n","    \"the more 'diluted' the embedding will be.\")\n","messages = [word, sentence, paragraph]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"e85nO-qYpwfn","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":275},"outputId":"d9a3208e-dd38-4c67-c9bd-f36510264c46","executionInfo":{"status":"ok","timestamp":1587005315210,"user_tz":300,"elapsed":5958,"user":{"displayName":"Varun Ketan Varia","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKHlV33ShWTnWMaaY8-As0pcq0f-kvYtpuC3IlwA=s64","userId":"01230964141385336374"}}},"source":["# Initialising the session once\n","import tensorflow as tf\n","import tensorflow_hub as hub\n","def embed_useT(module):\n","    with tf.Graph().as_default():\n","        sentences = tf.placeholder(tf.string)\n","        embed = hub.Module(module)\n","        embeddings = embed(sentences)\n","        session = tf.train.MonitoredSession()\n","    return lambda x: session.run(embeddings, {sentences: x})\n","embed_fn = embed_useT('../module_useT')\n","\n","#embed_fn(messages)"],"execution_count":5,"outputs":[{"output_type":"stream","text":["INFO:tensorflow:Saver not created because there are no variables in the graph to restore\n"],"name":"stdout"},{"output_type":"stream","text":["INFO:tensorflow:Saver not created because there are no variables in the graph to restore\n"],"name":"stderr"},{"output_type":"stream","text":["WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/ops/array_ops.py:1475: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n"],"name":"stdout"},{"output_type":"stream","text":["WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/ops/array_ops.py:1475: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n"],"name":"stderr"},{"output_type":"stream","text":["INFO:tensorflow:Graph was finalized.\n"],"name":"stdout"},{"output_type":"stream","text":["INFO:tensorflow:Graph was finalized.\n"],"name":"stderr"},{"output_type":"stream","text":["INFO:tensorflow:Running local_init_op.\n"],"name":"stdout"},{"output_type":"stream","text":["INFO:tensorflow:Running local_init_op.\n"],"name":"stderr"},{"output_type":"stream","text":["INFO:tensorflow:Done running local_init_op.\n"],"name":"stdout"},{"output_type":"stream","text":["INFO:tensorflow:Done running local_init_op.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"41auuA1D046R","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"ffaf8550-5313-4bc9-f923-5c913a4fa382","executionInfo":{"status":"ok","timestamp":1587005326046,"user_tz":300,"elapsed":8221,"user":{"displayName":"Varun Ketan Varia","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKHlV33ShWTnWMaaY8-As0pcq0f-kvYtpuC3IlwA=s64","userId":"01230964141385336374"}}},"source":["import time\n","start_time = time.time()\n","paragraph=[]\n","filename = \"20121202-wiki-en_000007.txt.xml\"\n","with open(filename,'r') as fi:\n","  for line in fi:\n","    paragraph.append(line)\n","\n","messages = paragraph\n","\n","embed_fn(messages)\n","end_time = time.time()\n","print (end_time - start_time)"],"execution_count":6,"outputs":[{"output_type":"stream","text":["7.339281320571899\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"N8IdD0XiqgHx","colab_type":"code","colab":{}},"source":["type(embed_fn(messages))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"sxIjIp7gp-Fq","colab_type":"code","colab":{}},"source":["with open('Sample_rest.txt', 'w+') as filehandle:\n","  filehandle.write(embed_fn(messages))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"7ByfGYVorWGf","colab_type":"code","colab":{}},"source":["np.savetxt('geekfile.txt', embed_fn(messages)) "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Gl__HSXNsHjv","colab_type":"code","colab":{"base_uri":"https://localhost:8080/"},"outputId":"7c0cc22a-873d-4dec-dd59-53e766272e1f","executionInfo":{"status":"ok","timestamp":1587006469996,"user_tz":300,"elapsed":2682,"user":{"displayName":"Varun Ketan Varia","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhKHlV33ShWTnWMaaY8-As0pcq0f-kvYtpuC3IlwA=s64","userId":"01230964141385336374"}}},"source":["!ls"],"execution_count":7,"outputs":[{"output_type":"stream","text":["20121202-wiki-en_000000.txt.xml  20121202-wiki-en_000005.txt.xml\n","20121202-wiki-en_000002.txt.xml  20121202-wiki-en_000008.txt.xml\n","20121202-wiki-en_000003.txt.xml  Test\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Lt9bV7NZ9Oou","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}